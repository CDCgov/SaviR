[{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Welcome!","title":"Welcome!","text":"Thank contributing CDC’s Open Source projects! questions doubts, don’t afraid send way. appreciate contributions, looking forward fostering open, transparent, collaborative environment. contributing, encourage also read LICENSE, README, code--conduct files, also found repository. inquiries questions answered content repository, feel free contact us.","code":""},{"path":"/CONTRIBUTING.html","id":"public-domain","dir":"","previous_headings":"","what":"Public Domain","title":"Welcome!","text":"project public domain within United States, copyright related rights work worldwide waived CC0 1.0 Universal public domain dedication. contributions project released CC0 dedication. submitting pull request agreeing comply waiver copyright interest.","code":""},{"path":"/CONTRIBUTING.html","id":"requesting-changes","dir":"","previous_headings":"","what":"Requesting Changes","title":"Welcome!","text":"pull request/merging process designed give CDC Surveillance Team space opportunity consider discuss suggested changes. policy affects CDC spaces, -line , users expected abide .","code":""},{"path":"/CONTRIBUTING.html","id":"open-an-issue-in-the-repository","dir":"","previous_headings":"Requesting Changes","what":"Open an issue in the repository","title":"Welcome!","text":"don’t specific language submit like suggest change something addressed, can open issue repository. Team members respond issue soon possible.","code":""},{"path":"/CONTRIBUTING.html","id":"submit-a-pull-request","dir":"","previous_headings":"Requesting Changes","what":"Submit a pull request","title":"Welcome!","text":"like contribute, please submit pull request. order us merge pull request, must: * least seven days old. Pull requests may held longer necessary give people opportunity assess . * Receive +1 majority team members associated request. significant dissent team, meeting held discuss plan action pull request.","code":""},{"path":"/DISCLAIMER.html","id":null,"dir":"","previous_headings":"","what":"DISCLAIMER","title":"DISCLAIMER","text":"Use service limited non-sensitive publicly available data. Users must use, share, store kind sensitive data like health status, provision payment healthcare, Personally Identifiable Information (PII) /Protected Health Information (PHI), etc. circumstance. Administrators service reserve right moderate information used, shared, stored service time. user abide disclaimer Code Conduct may subject action, including revoking access services. material embodied software provided “-” without warranty kind, express, implied otherwise, including without limitation, warranty fitness particular purpose. event shall Centers Disease Control Prevention (CDC) United States (U.S.) government liable anyone else direct, special, incidental, indirect consequential damages kind, damages whatsoever, including without limitation, loss profit, loss use, savings revenue, claims third parties, whether CDC U.S. government advised possibility loss, however caused theory liability, arising connection possession, use performance software.","code":""},{"path":"/articles/prod_sitrep.html","id":"data-the-frankenstein-dataset","dir":"Articles","previous_headings":"","what":"Data: The Frankenstein Dataset","title":"SitRep Production","text":"onetable - stored metadata iso2 iso3 codes, country names, /State/WorldBank regions, UN population estimatesget_covid_df() - COVID dataframe appended select JHU obscalc_add_risk() - Add risk matrix calculations dataframeget_vax() - Get vaccination data OWIDget_combined_table(type=c(\"\", \"\"), geometry=FALSE) - Combine one large dataframe, optionally add geometry snippet produces master dataframe variables required sitrep graphics.","code":"df_who <- get_combined_table(\"WHO\") df_both <- get_combined_table(\"Both\")"},{"path":"/articles/prod_sitrep.html","id":"plots","dir":"Articles","previous_headings":"","what":"Plots","title":"SitRep Production","text":"Epicurves Risk Matrix (Global ) Vaccination Coverage (Global ) plot_epicurve(df, transparent = T) “plot_epicurve” function take df observations order match curve .int dashboard. individual epicurves region can run simply filtering one region dataframe. function detect region column one region produce epicurve accordingly.    plot_riskmatrix(df) Note labeling purposes, labels variable added dataframe specifying top 10 countries weekly average incidence, week case percent change, weekly total cases. Exclusion criteria: Countries population less 10 million countries weekly cases totals less 100.","code":"# Global epi_curve_global <- plot_epicurve(df_who, transparent = T)   epi_curve_global plot_epicurve(df_who, transparent = F) # Regions for (r in unique(na.omit(df_who$who_region))) {   epi_curve_regional <- plot_epicurve(filter(df_who, who_region == r), transparent = F)     print(epi_curve_regional) } global_risk_matrix <- df_both %>%   filter(date == sunday_date) %>%   filter(population >= 10000000) %>% # Exclude population less than 10M   filter(week_case >= 100) %>%   mutate(     rank_inc = dense_rank(desc(week_case_incidence)),     rank_per = dense_rank(desc(percent_change_case)),     rank_cas = dense_rank(desc(week_case))   ) %>%   mutate(labels = case_when(     rank_inc %in% 1:10 ~ country,     rank_per %in% 1:10 ~ country,     rank_cas %in% 1:10 ~ country   )) %>%   plot_riskmatrix()   global_risk_matrix global_vax_coverage <- df_both %>%   filter(date <= sunday_date) %>%   filter(date == max(date)) %>%   filter(!is.na(state_region)) %>%   plot_vaxcoverage(by_cat = \"State Region\")  global_vax_coverage"},{"path":"/articles/prod_sitrep.html","id":"maps","dir":"Articles","previous_headings":"","what":"Maps","title":"SitRep Production","text":"Notes mapping Burden Map Trend Map Vaccine Map (Global ) default, get_combined_table() return geometry. preferable, since size table quite large geometry list column takes lot space memory. However, want map data, can either call get_combined_table(\"\", geometry = TRUE), join country_coords filtering, like : map_burden(df) “map_burden” function requires result column weekly average incidence converted factors using “cut”. dataframe normally used appended JHU filtered report date. region maps can also produced simply filtering input dataframe specific region. function detect number regions provided act accordingly.   map_trend(df) “map_trend” function requires result column weekly percent change converted factors using “cut”. dataframe normally used appended JHU filtered report date. region maps can also produced simply filtering input dataframe specific region. function detect number regions provided act accordingly.   map_vaccinations(df, vac_type = c(\"People\", \"Fully\"))","code":"# Filter to only observations with date as of Sunday # and join in geometry df_both_mapping <- df_both %>%   filter(date == sunday_date) %>%   left_join(select(country_coords, id, geometry), by = \"id\") burden_map_global <- df_both_mapping %>%   mutate(result = cut(week_case_incidence, breaks = c(-0.1, 1, 10, 25, Inf))) %>%   map_burden()   burden_map_global for (r in unique(na.omit(df_both$who_region))) {   burden_map_regional <- df_both_mapping %>%     filter(who_region == r) %>%     mutate(result = cut(week_case_incidence, breaks = c(-0.1, 1, 10, 25, Inf))) %>%     map_burden()     print(burden_map_regional) } trend_map_global <- df_both_mapping %>%   mutate(result = cut(percent_change_case, breaks = c(-Inf, -50, 0, 50, 100, 200, Inf))) %>%   map_trend()   trend_map_global for (r in unique(na.omit(df_both_mapping$who_region))) {   trend_map_reg <- df_both_mapping %>%     filter(who_region == r) %>%     mutate(result = cut(percent_change_case, breaks = c(-Inf, -50, 0, 50, 100, 200, Inf))) %>%     map_trend()     print(trend_map_reg) } global_vax_map <- df_both_mapping %>%   mutate(result = cut(people_vaccinated_per_hundred, breaks = c(0, 1, 3, 10, 30, Inf))) %>%   group_by(country) %>%   filter(!is.na(result)) %>%   filter(date == max(date)) %>%   ungroup() %>%   map_vaccinations(., vac_type = \"People\")  global_vax_map"},{"path":"/articles/prod_sitrep.html","id":"tables","dir":"Articles","previous_headings":"","what":"Tables","title":"SitRep Production","text":"Top 10 Cases Table Top 10 Incidence Table Top 10 Percent Change Table Top 10 Vaccinations Table Top 10 Fully Vaccinated Table Countries Concern Table table_10vaccinations(df, type = c(\"Global\", \"Region\"), run_date) “table_10vaccinations” function takes looks country, value1 (people vaccinated per hundred), value2 (daily vaccinations per hundred) column. Note vaccination reporting gaps, dataframe must sliced country recent date people_vaccinated_per_hundred value (one). table_10vaccinations(df, vac_type = c(\"Partial\", \"Fully\"), type = \"Global\", run_date = \"Enter date\") table_countriesofconcern(df, df_vaccinations_manufacturers, country_list) Country Denmark United Kingdom Kenya Portugal United States America South Africa Zambia Date 2022-03-11 2022-03-11 2022-03-11 2022-03-11 2022-03-11 2022-03-11 2022-03-11 New Cases 7 Day Average(7 Day Average Case Incidence per 100,000) 14,958.1(257.31) 49,433.4(72.48) 16.4(0.03) 12,224.6(120.23) 38,216.4(11.48) 1,536(2.56) 208(1.1) 7 Day Cases 104,707 346,034 115 85,572 267,515 10,752 1,456 Previous 7 Day Cases 126,660 249,853 244 63,616 395,446 11,979 1,276 % Change Cases Previous 7 Days -17.3% 38.5% -52.9% 34.5% -32.4% -10.2% 14.1% New Deaths 7 Day Average(7 Day Average Death Incidence per 100,000) 45.4(0.78) 66.1(0.1) 0.6(0) 20.6(0.2) 1,239.9(0.37) 26(0.04) 0.4(0) 7 Day Deaths 318.0 463.0 4.0 144.0 8,679.0 182.0 3.0 Previous 7 Day Deaths 270.0 694.0 2.0 200.0 10,853.0 481.0 10.0 % Change Deaths Previous 7 Days 17.8% -33.3% 100% -28% -20% -62.2% -70% Recent Date Vaccinations 2022-03-10 2022-03-09 2022-03-10 2022-03-10 2022-03-09 2022-03-10 2022-03-09 People Vaccinated Per 100 People 83.31 77.25 21.07 95.04 76.63 34.29 13.27 People Fully Vaccinated Per 100 People 81.57 72.06 14.35 92.60 65.19 29.10 10.64 Total Vaccinations Per 100 People 226.05 205.66 31.02 225.45 167.54 53.83 16.31 Vaccines Use Johnson&Johnson, Moderna, Pfizer/BioNTech Moderna, Oxford/AstraZeneca, Pfizer/BioNTech Johnson&Johnson, Moderna, Oxford/AstraZeneca, Pfizer/BioNTech, Sinopharm/Beijing Johnson&Johnson, Moderna, Oxford/AstraZeneca, Pfizer/BioNTech Johnson&Johnson, Moderna, Pfizer/BioNTech Johnson&Johnson, Pfizer/BioNTech Johnson&Johnson, Oxford/AstraZeneca, Sinopharm/Beijing % Delta","code":"df_both %>%   filter(date == sunday_date) %>%   select(country = who_country, value1 = week_case, value2 = percent_change_case) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10mostcases(run_date = format(sunday_date, \"%B %d, %Y\")) for (r in unique(na.omit(df_both$who_region))) {   tab_out <- df_both %>%     filter(date == sunday_date) %>%     filter(who_region == r) %>%     select(country = who_country, value1 = week_case, value2 = percent_change_case) %>%     arrange(desc(value1)) %>%     head(10) %>%     table_10mostcases(., type = r, run_date = format(sunday_date, \"%B %d, %Y\"))      print(htmltools::tagList(tab_out)) } df_both %>%   filter(date == sunday_date) %>%   select(country = who_country, value1 = week_case_incidence, value2 = percent_change_case) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10incidence(., run_date = format(sunday_date, \"%B %d, %Y\")) for (r in unique(na.omit(df_both$who_region))) {   tab_out <- df_both %>%     filter(date == sunday_date) %>%     filter(who_region == r) %>%     select(country = who_country, value1 = week_case_incidence, value2 = percent_change_case) %>%     arrange(desc(value1)) %>%     head(10) %>%     table_10incidence(., type = r, run_date = format(sunday_date, \"%B %d, %Y\"))    print(htmltools::tagList(tab_out)) } df_both %>%   filter(date == sunday_date) %>%   filter(population >= 10000000) %>% # Exclude population less than 10M   select(country = who_country, value1 = percent_change_case, value2 = percent_change4_case) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10percentchange(., run_date = format(sunday_date, \"%B %d, %Y\")) for (r in unique(na.omit(df_both$who_region))) {   tab_out <- df_both %>%     filter(date == sunday_date) %>%     filter(population >= 100000) %>% # Exclude population less than 100,000     filter(who_region == r) %>%     select(country = who_country, value1 = percent_change_case, value2 = percent_change4_case) %>%     arrange(desc(value1)) %>%     head(10) %>%     table_10percentchange(type = r, run_date = format(sunday_date, \"%B %d, %Y\"))         print(htmltools::tagList(tab_out)) } df_both %>%   filter(date <= sunday_date) %>%   filter(population > 1000000) %>%   group_by(country) %>%   filter(!is.na(people_vaccinated_per_hundred)) %>%   filter(date == max(date)) %>%   ungroup() %>%   select(country = who_country, value1 = people_vaccinated_per_hundred, value2 = daily_vaccinations_per_hundred) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10vaccinations(., run_date = format(sunday_date, \"%B %d, %Y\")) for (r in unique(na.omit(df_both$who_region))) {   tab_out <- df_both %>%     filter(date <= sunday_date) %>%     filter(population > 100000) %>% # Exclude population less than 100,000     filter(who_region == r) %>%     group_by(country) %>%     filter(!is.na(people_vaccinated_per_hundred)) %>%     arrange(date) %>%     top_n(1, date) %>%     distinct(id, .keep_all = T) %>%     select(country = who_country, value1 = people_vaccinated_per_hundred, value2 = daily_vaccinations_per_hundred) %>%     arrange(desc(value1)) %>%     head(10) %>%     table_10vaccinations(., type = r, run_date = format(sunday_date, \"%B %d, %Y\"))    print(htmltools::tagList(tab_out)) } df_both %>%   filter(date <= sunday_date) %>%   filter(population > 1000000) %>%   group_by(country) %>%   filter(!is.na(people_fully_vaccinated_per_hundred)) %>%   filter(date == max(date)) %>%   ungroup() %>%   select(country = who_country, value1 = people_fully_vaccinated_per_hundred, value2 = daily_vaccinations_per_hundred) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10vaccinations(., run_date = format(sunday_date, \"%B %d, %Y\")) c_list <- c(\"United Kingdom\",\"Denmark\",\"Portugal\",\"South Africa\",\"Kenya\",\"Zambia\",\"United States of America\") c_list_iso <- parse_country(c_list, to = \"iso3c\")  df_both_latest <- df_both %>%   group_by(id) %>%   filter(date == max(date)) %>%   ungroup()  vax_man <- get_vax_manufacturers()  table_countriesofconcern(df_both_latest, vax_man, c_list_iso)"},{"path":"/articles/savir_version_0.2_api_changes.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"SaviR Version 0.2 API Changes","text":"SaviR version 0.2 brings major revisions SaviR API design; complementary breaking. ’ll highlight .","code":""},{"path":[]},{"path":"/articles/savir_version_0.2_api_changes.html","id":"black-box-warning","dir":"Articles","previous_headings":"Standardization of geography columns across datasets","what":"Black box warning","title":"SaviR Version 0.2 API Changes","text":"pretty substantial impact products, likely break existing downstream code…","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"motivation","dir":"Articles","previous_headings":"Standardization of geography columns across datasets","what":"Motivation","title":"SaviR Version 0.2 API Changes","text":"data pull functions use different naming schemes ISO country codes country names. ’s never apparent column join , joining, ’s difficult reason came . ’m attempting standardize ISO code columns either iso2code id (iso3code) depending value. guesswork involved joining disparate datasets (’s always id iso2code, join without specifying argument).","code":""},{"path":[]},{"path":"/articles/savir_version_0.2_api_changes.html","id":"owid_testing_meta-get_owid_testing_meta","dir":"Articles","previous_headings":"Standardization of geography columns across datasets > Impact","what":"owid_testing_meta, get_owid_testing_meta()","title":"SaviR Version 0.2 API Changes","text":"iso_code -> id","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"get_testing-and-all-inner-functions","dir":"Articles","previous_headings":"Standardization of geography columns across datasets > Impact","what":"get_testing() (and all inner functions)","title":"SaviR Version 0.2 API Changes","text":"iso_code -> id","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"get_covid_df","dir":"Articles","previous_headings":"Standardization of geography columns across datasets > Impact","what":"get_covid_df()","title":"SaviR Version 0.2 API Changes","text":"country_code -> iso2code provided onetable, get_covid_df() never used without joining metadata table","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"get_vax-get_vax_manufacturers","dir":"Articles","previous_headings":"Standardization of geography columns across datasets > Impact","what":"get_vax(), get_vax_manufacturers()","title":"SaviR Version 0.2 API Changes","text":"iso_code -> id Still ideal, apparent column comes URL get_vax_manufacturers() changed","code":"onetable #> # A tibble: 237 × 10 #>    id    iso2code state_region            who_region who_region_desc who_country #>    <chr> <chr>    <chr>                   <chr>      <chr>           <chr>       #>  1 ABW   AW       NA                      AMRO       Americas        Aruba       #>  2 AFG   AF       South and Central Asia  EMRO       Eastern Medite… Afghanistan #>  3 AGO   AO       Sub-Saharan Africa      AFRO       Africa          Angola      #>  4 AIA   AI       NA                      AMRO       Americas        Anguilla    #>  5 ALB   AL       Europe and Eurasia      EURO       Europe          Albania     #>  6 AND   AD       Europe and Eurasia      EURO       Europe          Andorra     #>  7 ARE   AE       Near East (Middle East… EMRO       Eastern Medite… United Ara… #>  8 ARG   AR       Western Hemisphere      AMRO       Americas        Argentina   #>  9 ARM   AM       Europe and Eurasia      EURO       Europe          Armenia     #> 10 ASM   AS       NA                      WPRO       Western Pacific American S… #> # … with 227 more rows, and 4 more variables: incomelevel_value <chr>, #> #   population <dbl>, eighteenplus <dbl>, geometry <MULTIPOLYGON [m]> head(get_covid_df()) #> # A tibble: 6 × 8 #>   date       iso2code country              new_cases cumulative_cases new_deaths #>   <date>     <chr>    <chr>                    <int>            <int>      <int> #> 1 2020-01-03 AD       Andorra                      0                0          0 #> 2 2020-01-03 AE       United Arab Emirates         0                0          0 #> 3 2020-01-03 AF       Afghanistan                  0                0          0 #> 4 2020-01-03 AG       Antigua and Barbuda          0                0          0 #> 5 2020-01-03 AI       Anguilla                     0                0          0 #> 6 2020-01-03 AL       Albania                      0                0          0 #> # … with 2 more variables: cumulative_deaths <int>, source <chr> head(get_vax()) #> # A tibble: 6 × 17 #>   owid_country id    date       total_vaccinations people_vaccinated #>   <chr>        <chr> <date>                  <dbl>             <dbl> #> 1 Aruba        ABW   2021-03-29              25766             15600 #> 2 Aruba        ABW   2021-03-30              25766             15600 #> 3 Aruba        ABW   2021-03-31              25766             15600 #> 4 Aruba        ABW   2021-04-01              25766             15600 #> 5 Aruba        ABW   2021-04-02              25766             15600 #> 6 Aruba        ABW   2021-04-03              25766             15600 #> # … with 12 more variables: people_fully_vaccinated <dbl>, #> #   total_boosters <int>, daily_vaccinations_raw <int>, #> #   daily_vaccinations <int>, total_vaccinations_per_hundred <dbl>, #> #   people_vaccinated_per_hundred <dbl>, #> #   people_fully_vaccinated_per_hundred <dbl>, #> #   total_boosters_per_hundred <dbl>, daily_vaccinations_per_million <int>, #> #   daily_people_vaccinated <int>, daily_people_vaccinated_per_hundred <dbl>, …"},{"path":"/articles/savir_version_0.2_api_changes.html","id":"new-starting-block-function-get_combined_table","dir":"Articles","previous_headings":"","what":"New “Starting Block” function get_combined_table()","title":"SaviR Version 0.2 API Changes","text":"Many scripts accomplished task differently, never clear exactly pull join data together. one forced use , now automated way : Pull metadata, case + death data, vaccine data Join together Filter source, + JHU source Keep (remove) geometry column mapping get_combined_table() takes two arguments: type: one “” “”, based source ’d like geometry: TRUE/FALSE (default:TRUE) based whether ’d like geometry .","code":"who_data <- get_combined_table(\"WHO\") # is identical to the following sequence: # (which still works, but is unnecessary) # onetable %>% #   select(-geometry) %>% # In the case that geometry = FALSE #   right_join(get_covid_df(), by = \"iso2code\") %>% #   filter(source == \"WHO\") %>% # In the case of type = \"WHO\" #   # filter(!(country == \"China\" & source == \"WHO\")) %>% # In the case of type = \"Both\" #   calc_add_risk() %>% #   left_join(get_vax(), by = c(\"id\", \"date\"))  head(who_data) #> # A tibble: 6 × 56 #>   id    iso2code state_region who_region who_region_desc who_country #>   <chr> <chr>    <chr>        <chr>      <chr>           <chr>       #> 1 ABW   AW       NA           AMRO       Americas        Aruba       #> 2 ABW   AW       NA           AMRO       Americas        Aruba       #> 3 ABW   AW       NA           AMRO       Americas        Aruba       #> 4 ABW   AW       NA           AMRO       Americas        Aruba       #> 5 ABW   AW       NA           AMRO       Americas        Aruba       #> 6 ABW   AW       NA           AMRO       Americas        Aruba       #> # … with 50 more variables: incomelevel_value <chr>, population <dbl>, #> #   eighteenplus <dbl>, date <date>, country <chr>, new_cases <int>, #> #   cumulative_cases <int>, new_deaths <int>, cumulative_deaths <int>, #> #   source <chr>, new_cases_copy <dbl>, new_deaths_copy <dbl>, #> #   cumulative_cases_copy <dbl>, cumulative_deaths_copy <dbl>, weekdate <date>, #> #   new_cases_7dav <dbl>, new_deaths_7dav <dbl>, daily_case_incidence <dbl>, #> #   daily_death_incidence <dbl>, week_case <dbl>, prev_week_case <dbl>, …"},{"path":"/articles/savir_version_0.2_api_changes.html","id":"vaccine-carry-forward","dir":"Articles","previous_headings":"","what":"Vaccine carry-forward","title":"SaviR Version 0.2 API Changes","text":"running issues vaccination data sometimes carried forward, always. Since generally behavior want, ’ve applied within SaviR using new function, calc_vax_carryforward()","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"calc_vax_carryforward","dir":"Articles","previous_headings":"Vaccine carry-forward","what":"calc_vax_carryforward()","title":"SaviR Version 0.2 API Changes","text":"function used internally get_vax() get_combined_table() carry-forward following columns: total_vaccinations people_vaccinated people_fully_vaccinated total_boosters total_vaccinations_per_hundred people_vaccinated_per_hundred people_fully_vaccinated_per_hundred total_boosters_per_hundred Passing columns calc_vax_carryforward overrides behavior, isn’t presently need .","code":""},{"path":"/articles/savir_version_0.2_api_changes.html","id":"get_vax_dates","dir":"Articles","previous_headings":"Vaccine carry-forward","what":"get_vax_dates()","title":"SaviR Version 0.2 API Changes","text":"vaccine data carried-forward, old way computing date vaccine data last updated longer possible. Instead, ’ve created function computes dates automatically, get_vax_dates() get_vax_dates() takes arguments, returns data frame 1 row per country detailing vaccine metric last updated.","code":"vax_dates <- get_vax_dates()  head(vax_dates) #>    owid_country  id total_doses_date partial_date fully_date #> 1:  Afghanistan AFG       2022-03-06   2022-03-06 2022-03-06 #> 2:      Albania ALB       2022-03-10   2022-03-10 2022-03-10 #> 3:      Algeria DZA       2022-02-20   2022-02-20 2022-02-20 #> 4:      Andorra AND       2022-02-13   2022-02-13 2022-02-13 #> 5:       Angola AGO       2022-03-02   2022-03-02 2022-03-02 #> 6:     Anguilla AIA       2022-03-09   2022-03-09 2022-03-09"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean Browning. Author, maintainer. Kimberly Wong. Author. Nartlada Chantharojwong. Author. James Fuller. Author. Dante Bugli. Contributor. Randy Yee. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Browning S, Wong K, Chantharojwong N, Fuller J, Yee R (2022). SaviR: ITF Situational Awareness Visualization. R package version 0.2.0, https://github.com/CDCgov/SaviR.","code":"@Manual{,   title = {SaviR: ITF Situational Awareness and Visualization},   author = {Sean Browning and Kimberly Wong and Nartlada Chantharojwong and James Fuller and Randy Yee},   year = {2022},   note = {R package version 0.2.0},   url = {https://github.com/CDCgov/SaviR}, }"},{"path":"/code-of-conduct.html","id":null,"dir":"","previous_headings":"","what":"Creating a Culture of Innovation","title":"Creating a Culture of Innovation","text":"aspire create culture people work joyfully, communicate openly things matter, provide great services globally. like team communities (government private sector) reflect diversity kinds, just classes protected law. Diversity fosters innovation. Diverse teams creative teams. need diversity perspective create solutions challenges face. code conduct (adapted 18F’s Code Conduct). follow Equal Employment Opportunity laws expect everyone work adhere GSA Anti-harrasment Policy, even work Centers Disease Control Prevention GSA. expect every user follow code conduct laws policies mentioned .","code":""},{"path":"/code-of-conduct.html","id":"be-empowering","dir":"","previous_headings":"","what":"Be Empowering","title":"Creating a Culture of Innovation","text":"Consider can encourage support others. Make room quieter voices contribute. Offer support enthusiasm great ideas. Leverage low cost experimentation support colleagues’ ideas, take care acknowledge original source. Look ways contribute collaborate, even situations normally wouldn’t. Share knowledge skills. Prioritize access input traditionally excluded civic process.","code":""},{"path":"/code-of-conduct.html","id":"rules-of-behavior","dir":"","previous_headings":"","what":"Rules of Behavior","title":"Creating a Culture of Innovation","text":"understand must complete security awareness records management training annually order comply latest security records management policies. understand must also follow Rules Behavior use HHS Information Resources understand must use, share, store kind sensitive data (health status, provision payment healthcare, PII, etc.) circumstance. knowingly conceal, falsify, remove information. understand can use non-sensitive /publicly available data. understand passwords create set accounts need comply CDC’s password policy. understand stewards reserves right moderate data time.","code":""},{"path":"/code-of-conduct.html","id":"boundaries","dir":"","previous_headings":"","what":"Boundaries","title":"Creating a Culture of Innovation","text":"Create boundaries behavior consider can create safe space helps prevent unacceptable behavior others. can’t list instances unacceptable behavior, can provide examples help guide community thinking respond experience types behavior, whether directed others. unsure something appropriate behavior, probably . person interact can define line . Impact matters intent. Ensuring behavior negative impact responsibility. Problems usually arise assume way thinking behavior norm everyone.","code":""},{"path":"/code-of-conduct.html","id":"here-are-some-examples-of-unacceptable-behavior","dir":"","previous_headings":"Boundaries","what":"Here are some examples of unacceptable behavior","title":"Creating a Culture of Innovation","text":"Negative offensive remarks based protected classes listed GSA Anti-harrasment Policy race, religion, color, sex, national origin, age, disability, genetric information, sexual orientation, gender identity, parental status, maritual status, political affiliation well gender expression, mental illness, socioeconomic status backgrounds, neuro()typicality, physical appearance, body size, clothing. Consider calling attention differences can feel alienating. Sustained disruption meetings, talks, discussions, including chatrooms. Patronizing language behavior. Aggresive behavior, unconstructive criticism, providing correction improve conversation (sometimes referred “well actually’s”), repeatedly interrupting talking someone else, feigning surprise someone’s lack knowledge awareness topic, subtle prejudice. Referring people way misidentifies gender /rejects validity gender identity; instance using incorrect pronouns forms address (misgendering). Retaliating anyone files formal complaint someone violated codes laws.","code":""},{"path":"/code-of-conduct.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Creating a Culture of Innovation","text":"CDC Scientific Clearance process obtaining approvals appropriate CDC officials CDC information product released public CDC’s external public health partners. Information products require formal clearance include print, electronic, oral materials, CDC employees author co-author, whether published CDC outside CDC. CDC contractors developing content behalf CDC public CDC’s external public health partners also required put content formal clearance process. collaborative functions related projects include blogs, wikis, forums, bug tracking sites, source control others deemed necessary. individuals within CDC, adherence following policies required: * CDC “Clearance Information Products Disseminated Outside CDC Public Use” * HHS “Ensuring Quality Information Disseminated HHS agencies” collaborative materials controlled rules contained within document. allow real-time collaboration opportunities among CDC employees, CDC contractors CDC public health partners.","code":""},{"path":"/code-of-conduct.html","id":"credit","dir":"","previous_headings":"","what":"Credit","title":"Creating a Culture of Innovation","text":"code conduct mainly adapted 18F’s Code Conduct CDC’s Informatics Innovation Unit R&D Lab’s code conduct.","code":""},{"path":"/code-of-conduct.html","id":"relevant-legal-considerations","dir":"","previous_headings":"","what":"Relevant Legal Considerations","title":"Creating a Culture of Innovation","text":"Laws enforced Equal Employment Opportunity Commission Types discrimination prohibited law New proposed regulations","code":""},{"path":"/index.html","id":"savir-","dir":"","previous_headings":"","what":"ITF Situational Awareness and Visualization","title":"ITF Situational Awareness and Visualization","text":"package divided two main sections: analytical datasets data visualizations.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ITF Situational Awareness and Visualization","text":"can install released version SaviR Github :","code":"devtools::install_github(\"CDCgov/SaviR\")"},{"path":"/index.html","id":"covad---covid-analytical-datasets","dir":"","previous_headings":"Installation","what":"COVAD - COVID Analytical Datasets","title":"ITF Situational Awareness and Visualization","text":"Metadata stored package can called:","code":"metadata <- onetable   country_coordinates <- country_coords"},{"path":"/index.html","id":"covac---covid-analytical-checks","dir":"","previous_headings":"Installation","what":"COVAC - COVID Analytical Checks","title":"ITF Situational Awareness and Visualization","text":"DEVELOPMENT","code":""},{"path":[]},{"path":"/index.html","id":"public-domain-standard-notice","dir":"","previous_headings":"","what":"Public Domain Standard Notice","title":"ITF Situational Awareness and Visualization","text":"repository constitutes work United States Government subject domestic copyright protection 17 USC § 105. repository public domain within United States, copyright related rights work worldwide waived CC0 1.0 Universal public domain dedication. contributions repository released CC0 dedication. submitting pull request agreeing comply waiver copyright interest.","code":""},{"path":"/index.html","id":"license-standard-notice","dir":"","previous_headings":"","what":"License Standard Notice","title":"ITF Situational Awareness and Visualization","text":"repository utilizes code licensed terms Apache Software License therefore licensed ASL v2 later. source code repository free: can redistribute /modify terms Apache Software License version 2, (option) later version. source code repository distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See Apache Software License details. received copy Apache Software License along program. , see http://www.apache.org/licenses/LICENSE-2.0.html source code forked open source projects inherit license.","code":""},{"path":"/index.html","id":"privacy-standard-notice","dir":"","previous_headings":"","what":"Privacy Standard Notice","title":"ITF Situational Awareness and Visualization","text":"repository contains non-sensitive, publicly available data information. material community participation covered Disclaimer Code Conduct. information CDC’s privacy policy, please visit http://www.cdc.gov//privacy.html.","code":""},{"path":"/index.html","id":"contributing-standard-notice","dir":"","previous_headings":"","what":"Contributing Standard Notice","title":"ITF Situational Awareness and Visualization","text":"Anyone encouraged contribute repository forking submitting pull request. (new GitHub, might start basic tutorial.) contributing project, grant world-wide, royalty-free, perpetual, irrevocable, non-exclusive, transferable license users terms Apache Software License v2 later. comments, messages, pull requests, submissions received CDC including GitHub page may subject applicable federal law, including limited Federal Records Act, may archived. Learn http://www.cdc.gov//privacy.html.","code":""},{"path":"/index.html","id":"records-management-standard-notice","dir":"","previous_headings":"","what":"Records Management Standard Notice","title":"ITF Situational Awareness and Visualization","text":"repository source government records, copy increase collaboration collaborative potential. government records published CDC web site.","code":""},{"path":"/index.html","id":"additional-standard-notices","dir":"","previous_headings":"","what":"Additional Standard Notices","title":"ITF Situational Awareness and Visualization","text":"Please refer CDC’s Template Repository information contributing repository, public domain notices disclaimers, code conduct.","code":""},{"path":"/reference/calc_add_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_add_risk — calc_add_risk","title":"calc_add_risk — calc_add_risk","text":"Calculate epi stats generalized df input.","code":""},{"path":"/reference/calc_add_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_add_risk — calc_add_risk","text":"","code":"calc_add_risk(df)"},{"path":"/reference/calc_add_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_add_risk — calc_add_risk","text":"df Dataframe id, date, new_cases, new_deaths, cumulative_cases, cumulative_deaths, population.","code":""},{"path":"/reference/calc_add_risk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calc_add_risk — calc_add_risk","text":"","code":"if (FALSE) { df <- onetable %>%   right_join(get_covid_df(), by = c(\"iso2code\")) %>%   filter(!(country == \"China\" & source == \"WHO\"))  calc_add_risk(df) }"},{"path":"/reference/calc_vax_carryforward.html","id":null,"dir":"Reference","previous_headings":"","what":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","title":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","text":"Carry-Forward vaccination metrics latest date","code":""},{"path":"/reference/calc_vax_carryforward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","text":"","code":"calc_vax_carryforward(df, ...)"},{"path":"/reference/calc_vax_carryforward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","text":"df (data.frame) Source data frame containing vaccine metrics get_vax() ... (optional) (un-)quoted column names carry forward. Overwrites standard variable set","code":""},{"path":"/reference/calc_vax_carryforward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","text":"df either columns ... carried forward, default set","code":""},{"path":"/reference/calc_vax_carryforward.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Carry-Forward vaccination metrics to latest date — calc_vax_carryforward","text":"default, function carries forward following (unless names passed ...): total_vaccinations people_vaccinated people_fully_vaccinated total_boosters total_vaccinations_per_hundred people_vaccinated_per_hundred people_fully_vaccinated_per_hundred total_boosters_per_hundred","code":""},{"path":"/reference/cia_wfb_addn_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries with no current UNWPP data\nthat are manually updated here from CIA world factbook\nhttps://www.cia.gov/the-world-factbook/field/population/country-comparison\nCurrently 2021 projections are being used — cia_wfb_addn_countries","title":"Countries with no current UNWPP data\nthat are manually updated here from CIA world factbook\nhttps://www.cia.gov/the-world-factbook/field/population/country-comparison\nCurrently 2021 projections are being used — cia_wfb_addn_countries","text":"Countries current UNWPP data manually updated CIA world factbook https://www.cia.gov/-world-factbook/field/population/country-comparison Currently 2021 projections used","code":""},{"path":"/reference/cia_wfb_addn_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries with no current UNWPP data\nthat are manually updated here from CIA world factbook\nhttps://www.cia.gov/the-world-factbook/field/population/country-comparison\nCurrently 2021 projections are being used — cia_wfb_addn_countries","text":"","code":"cia_wfb_addn_countries"},{"path":"/reference/cia_wfb_addn_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries with no current UNWPP data\nthat are manually updated here from CIA world factbook\nhttps://www.cia.gov/the-world-factbook/field/population/country-comparison\nCurrently 2021 projections are being used — cia_wfb_addn_countries","text":"object class data.frame 4 rows 3 columns.","code":""},{"path":"/reference/country_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Country Coordinates — country_coords","title":"Country Coordinates — country_coords","text":"saved shapefile world use onetable, mapping.","code":""},{"path":"/reference/country_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country Coordinates — country_coords","text":"","code":"country_coords"},{"path":"/reference/country_coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country Coordinates — country_coords","text":"simple feature collection 172 features 4 variables: TYPE character Entity type ADMIN character English country name id character ISO 3166-1 alpha-3 country code geometry list List simple features mapping","code":""},{"path":"/reference/country_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Country Coordinates — country_coords","text":"Projected using CRS: \"+proj=robin +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" Northern Cyprus, Antarctica, Fiji removed","code":""},{"path":[]},{"path":"/reference/datasource_lk.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of all data sources used in the package\nto be updated as needed. — datasource_lk","title":"A list of all data sources used in the package\nto be updated as needed. — datasource_lk","text":"list data sources used package updated needed.","code":""},{"path":"/reference/datasource_lk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of all data sources used in the package\nto be updated as needed. — datasource_lk","text":"","code":"datasource_lk"},{"path":"/reference/datasource_lk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of all data sources used in the package\nto be updated as needed. — datasource_lk","text":"object class list length 13.","code":""},{"path":"/reference/get_combined_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create combined Case/Death/Vax data.frame — get_combined_table","title":"Create combined Case/Death/Vax data.frame — get_combined_table","text":"Create combined Case/Death/Vax data.frame","code":""},{"path":"/reference/get_combined_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create combined Case/Death/Vax data.frame — get_combined_table","text":"","code":"get_combined_table(type = c(\"WHO\", \"Both\"), geometry = FALSE)"},{"path":"/reference/get_combined_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create combined Case/Death/Vax data.frame — get_combined_table","text":"type (character) Whether data include information, +JHU (include separately HK/Macau/Taiwan) geometry (logical, default: FALSE) geometry column added","code":""},{"path":"/reference/get_combined_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create combined Case/Death/Vax data.frame — get_combined_table","text":"object class data.frame n rows 55(56, geometry = TRUE) columns","code":""},{"path":[]},{"path":"/reference/get_combined_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create combined Case/Death/Vax data.frame — get_combined_table","text":"","code":"if (FALSE) { # get_combined_table() is identical to the following sequence: onetable %>%   select(-geometry) %>% # In the case that geometry = FALSE   right_join(get_covid_df(), by = \"iso2code\") %>%   filter(source == \"WHO\") %>% # In the case of type = \"WHO\"   # filter(!(country == \"China\" & source == \"WHO\")) %>% # In the case of type = \"Both\"   calc_add_risk() %>%   left_join(get_vax(), by = c(\"id\", \"date\")) }"},{"path":"/reference/get_country_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"get_country_coords — get_country_coords","title":"get_country_coords — get_country_coords","text":"Add dates country data","code":""},{"path":"/reference/get_country_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_country_coords — get_country_coords","text":"","code":"get_country_coords(world = file.choose())"},{"path":"/reference/get_country_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_country_coords — get_country_coords","text":"world User prompt import shapefile. Output available package \"country_coords,\" function can used recreate dataset. regenerate make data available package, run following dev rebuild package: country_coords <- get_country_coords() usethis::use_data(country_coords, overwrite=T)","code":""},{"path":"/reference/get_country_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_country_coords — get_country_coords","text":"","code":"if (FALSE) { country_coords <- get_country_coords() }"},{"path":"/reference/get_covid_df.html","id":null,"dir":"Reference","previous_headings":"","what":"get_covid_df — get_covid_df","title":"get_covid_df — get_covid_df","text":"Get prepare COVID data. Pull current case death counts source. Hong Kong, Macau, Taiwan, pull John Hopkins source.","code":""},{"path":"/reference/get_covid_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_covid_df — get_covid_df","text":"","code":"get_covid_df()"},{"path":"/reference/get_covid_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_covid_df — get_covid_df","text":"data frame n rows 8 variables: date  date Date observation iso2code  character ISO 3166-1 alpha-2 country code country  character /JHU english country name new_cases  integer Number new cases reported date cumulative_cases  integer Number cumulative cases date new_deaths  integer Number new deaths reported date cumulative_deaths  integer Number cumulative deaths date source  character Data Source (JHU, )","code":""},{"path":"/reference/get_gdeltnews.html","id":null,"dir":"Reference","previous_headings":"","what":"get_gdeltnews — get_gdeltnews","title":"get_gdeltnews — get_gdeltnews","text":"Get last 2 weeks GDELT COVID news. Deduplicated DateTime, URL, DomainCountryCode.","code":""},{"path":"/reference/get_gdeltnews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_gdeltnews — get_gdeltnews","text":"","code":"get_gdeltnews(period = 14, start_date = Sys.Date() - 1)"},{"path":"/reference/get_gdeltnews.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_gdeltnews — get_gdeltnews","text":"period (numeric) Number days look back start_date start_date (Date) Date look back","code":""},{"path":"/reference/get_gdeltnews.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_gdeltnews — get_gdeltnews","text":"data frame n rows 16 variables: DateTime  POSIXct URL  character Title  character SharingImage  character LangCode  character DocTone  double DomainCountryCode  character Location  character Lat  double Lon  double iso2code  character Adm1Code  character GeoType  character ContextualText  character GeoCoord  character Adm2Code  character","code":""},{"path":"/reference/get_gdeltnews.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get_gdeltnews — get_gdeltnews","text":"Function may fail start date set current date future. News data files often avilable current date.","code":""},{"path":"/reference/get_gdeltnews.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_gdeltnews — get_gdeltnews","text":"","code":"if (FALSE) { gdeltnews_df <- get_gdeltnews() }"},{"path":"/reference/get_onetable.html","id":null,"dir":"Reference","previous_headings":"","what":"get_onetable — get_onetable","title":"get_onetable — get_onetable","text":"One table rule keys bind ! Output available package \"onetable,\" function can used recreate dataset. Note: state regions handled externally CSV file.","code":""},{"path":"/reference/get_onetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_onetable — get_onetable","text":"","code":"get_onetable(   usaid_metadata_file = NULL,   vintage = 2021,   country_geometries = country_coords )"},{"path":"/reference/get_onetable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_onetable — get_onetable","text":"usaid_metadata_file (character, optional) file path file containing State Department regions. Expects least two columns, \"iso_alpha3\", \"state_region\" vintage (numeric, default: 2021) year population projections use UN data country_geometries (data.frame, default: country_coords) data.frame/sfc least two columns: \"iso3code\", \"geometry\"","code":""},{"path":"/reference/get_onetable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_onetable — get_onetable","text":"data.frame 238 rows 10 columns","code":""},{"path":"/reference/get_onetable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get_onetable — get_onetable","text":"Population updates Pitcairn Islands, Jersey, Guernsey, Kosovo hardcoded must pulled manually via CIA factbook unless another source found.","code":""},{"path":[]},{"path":"/reference/get_onetable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_onetable — get_onetable","text":"","code":"if (FALSE) { # UPDATING ONETABLE # This is the typical location of the USAID DoS file: usaid_file <- file.path(Sys.getenv(\"USERPROFILE\"), \"CDC\", \"ITF-COVID19-SAVI - Documents\", \"usaid_dos_regions.csv\") onetable <- get_onetable(usaid_file) usethis::use_data(onetable, overwrite = TRUE) }"},{"path":"/reference/get_owid_testing_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"OWID Testing Metadata — owid_testing_meta","title":"OWID Testing Metadata — owid_testing_meta","text":"metadata table used within get_testing() determine country testing data computed. scrape OWID coronavirus testing website data related source definitions testing data country","code":""},{"path":"/reference/get_owid_testing_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OWID Testing Metadata — owid_testing_meta","text":"","code":"owid_testing_meta  get_owid_testing_meta(url = \"https://ourworldindata.org/coronavirus-testing\")"},{"path":"/reference/get_owid_testing_meta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OWID Testing Metadata — owid_testing_meta","text":"data frame 141 rows 5 variables: id  character ISO 3166-1 alpha-3 country code test_definition  character Description OWID testing definition case_definition  character Description OWID case definition posrate_definition  character Description OWID test positivity calculation posrate_direct  logical Indicator whether OWID pulls test positivity directly, computes ","code":""},{"path":"/reference/get_owid_testing_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OWID Testing Metadata — owid_testing_meta","text":"Data set scraped information related data definitions sources country","code":""},{"path":"/reference/get_owid_testing_meta.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"OWID Testing Metadata — owid_testing_meta","text":"owid_testing_meta: Saved dataset","code":""},{"path":"/reference/get_owid_testing_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OWID Testing Metadata — owid_testing_meta","text":"","code":"if (FALSE) { owid_testing_meta <- get_owid_testing_meta() usethis::use_data(owid_testing_meta, overwrite = T) }"},{"path":"/reference/get_preferred_testpos7.html","id":null,"dir":"Reference","previous_headings":"","what":"get_preferred_testpos7 — get_preferred_testpos7","title":"get_preferred_testpos7 — get_preferred_testpos7","text":"Evaluates testing data sources quality based new tests per 1K test positivity last 7 days providing preferred choice two sources, OWID FIND OUTPUT:","code":""},{"path":"/reference/get_preferred_testpos7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_preferred_testpos7 — get_preferred_testpos7","text":"","code":"get_preferred_testpos7(test_long, last_X_days = 14, analysis_date = NULL)"},{"path":"/reference/get_preferred_testpos7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_preferred_testpos7 — get_preferred_testpos7","text":"","code":"if (FALSE) { tests_preferred <- get_preferred_testpos7(test_long, last_X_days = 14, analysis_date = analysis_date) tests_preferred <- get_preferred_testpos7(test_long, last_X_days = 14, analysis_date = Sys.Date - 1) }"},{"path":"/reference/get_preferred_tests14.html","id":null,"dir":"Reference","previous_headings":"","what":"get_preferred_tests14 — get_preferred_tests14","title":"get_preferred_tests14 — get_preferred_tests14","text":"Evaluates testing data sources quality based new tests per 1K last 14 days providing preferred choice two sources, OWID FIND OUTPUT: recent 14-day average data points new tests per 1K based procedure picking preferred data source accounting flags, pick OWID default OWID FIND available last X days Subject future revisions","code":""},{"path":"/reference/get_preferred_tests14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_preferred_tests14 — get_preferred_tests14","text":"","code":"get_preferred_tests14(test_long, last_X_days = 14, analysis_date = NULL)"},{"path":"/reference/get_preferred_tests14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_preferred_tests14 — get_preferred_tests14","text":"","code":"if (FALSE) { tests_preferred <- get_preferred_tests14(test_long, last_X_days = 14, analysis_date = analysis_date) tests_preferred <- get_preferred_tests14(test_long, last_X_days = 14, analysis_date = Sys.Date - 1) }"},{"path":"/reference/get_testing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get testing data from OWID or FIND — get_testing","title":"Get testing data from OWID or FIND — get_testing","text":"Pulls testing data either OWID FIND sources based 7d testing / 1K positivity rate. recent 7-day average data points new tests per 1K positivity rate use risk matrix plots region. accounting flags, pick OWID default OWID FIND available last X days","code":""},{"path":"/reference/get_testing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get testing data from OWID or FIND — get_testing","text":"","code":"get_testing(analysis_date = Sys.Date() - 1L)"},{"path":"/reference/get_testing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get testing data from OWID or FIND — get_testing","text":"analysis_date (date default: Sys.Date() - 1L) Start date choose OWID FIND data","code":""},{"path":"/reference/get_testing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get testing data from OWID or FIND — get_testing","text":"data frame n rows 5 variables: id character ISO 3166-1 alpha-3 country code date date Date testing observation new_tests_smoothed_per_thousand double Tests / 1000 population (7d smooth) new_tests_smoothed_per_thousand_14 double Tests / 1000 population (14d smooth) positive_rate double Test positivity rate (7d smooth)","code":""},{"path":"/reference/get_testing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get testing data from OWID or FIND — get_testing","text":"","code":"if (FALSE) { testing <- get_testing() }"},{"path":"/reference/get_testing_long.html","id":null,"dir":"Reference","previous_headings":"","what":"get_testing_long — get_testing_long","title":"get_testing_long — get_testing_long","text":"Download combine full time series data related testing compiled World Data FIND","code":""},{"path":"/reference/get_testing_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_testing_long — get_testing_long","text":"","code":"get_testing_long(find_maxgap = 31, flag_test_increase = 5)"},{"path":"/reference/get_testing_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_testing_long — get_testing_long","text":"find_maxgap (numeric, default: 31) Gap cumulative testing number linearly interpolate flag_test_increase (numeric, default: 5) Flag increase interpolated cumulative tests","code":""},{"path":"/reference/get_testing_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_testing_long — get_testing_long","text":"Longitudinal data frame FIND OWID data sets consistent definitions","code":""},{"path":"/reference/get_testing_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_testing_long — get_testing_long","text":"","code":"if (FALSE) { testing_long <- get_testing_long() }"},{"path":"/reference/get_vax.html","id":null,"dir":"Reference","previous_headings":"","what":"get_vax — get_vax","title":"get_vax — get_vax","text":"Get vaccination data OWID Note cumulative totals carried forward NA given day.","code":""},{"path":"/reference/get_vax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_vax — get_vax","text":"","code":"get_vax()"},{"path":"/reference/get_vax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_vax — get_vax","text":"data frame n rows 17 variables: owid_country character English country name OWID id character ISO 3166-1 alpha-3 country code date date Date vaccination observation total_vaccinations double total number doses administered. vaccines require multiple doses, individual dose counted. person receives one dose vaccine, metric goes 1. receive second dose, goes 1 . receive third/booster dose, goes 1 . people_vaccinated double total number people received least one vaccine dose. person receives first dose 2-dose vaccine, metric goes 1. receive second dose, metric stays . people_fully_vaccinated double total number people received doses prescribed vaccination protocol. person receives first dose 2-dose vaccine, metric stays . receive second dose, metric goes 1. total_boosters integer total number COVID-19 vaccination booster doses administered (doses administered beyond number prescribed vaccination protocol) daily_vaccinations_raw integer daily change total number doses administered. calculated consecutive days. raw measure provided data checks transparency, strongly recommend analysis daily vaccination rates conducted using daily_vaccinations instead. daily_vaccinations integer new doses administered per day (7-day smoothed). countries report data daily basis, assume doses changed equally daily basis periods data reported. produces complete series daily figures, averaged rolling 7-day window. total_vaccinations_per_hundred double total_vaccinations per 100 people total population country. people_vaccinated_per_hundred double people_vaccinated per 100 people total population country. people_fully_vaccinated_per_hundred double people_fully_vaccinated per 100 people total population country. total_boosters_per_hundred double Total number COVID-19 vaccination booster doses administered per 100 people total population. daily_vaccinations_per_million integer daily_vaccinations per 1,000,000 people total population country. daily_people_vaccinated integer daily change number people received least one vaccine dose. daily_people_vaccinated_per_hundred double daily_people_vaccinated per 100 people total population country. daily_vaccinations_per_hundred double daily_vaccinations per 100 people total population country.","code":""},{"path":"/reference/get_vax_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get last non-NA date for key vaccination metrics by country — get_vax_dates","title":"Get last non-NA date for key vaccination metrics by country — get_vax_dates","text":"Computes latest date vaccination data provided country OWID source.","code":""},{"path":"/reference/get_vax_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get last non-NA date for key vaccination metrics by country — get_vax_dates","text":"","code":"get_vax_dates()"},{"path":"/reference/get_vax_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get last non-NA date for key vaccination metrics by country — get_vax_dates","text":"data frame n rows 5 columns owid_country character English country name OWID (may match country name) id character ISO 3166-1 alpha-3 country code total_doses_date double Date last update total vaccine doses partial_date double Date last update persons vaccinated fully_date double Date last update persons fully vaccinated","code":""},{"path":[]},{"path":"/reference/get_vax_manufacturers.html","id":null,"dir":"Reference","previous_headings":"","what":"get_vax_manufacturers — get_vax_manufacturers","title":"get_vax_manufacturers — get_vax_manufacturers","text":"Get vaccination metadata OWID","code":""},{"path":"/reference/get_vax_manufacturers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_vax_manufacturers — get_vax_manufacturers","text":"","code":"get_vax_manufacturers()"},{"path":"/reference/get_vax_manufacturers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_vax_manufacturers — get_vax_manufacturers","text":"data frame 218(-ish) rows 6 variables: owid_country  character English country name OWID id  character ISO 3166-1 alpha-3 country code vaccines  character list vaccines administered country current date. last_observation_date  date date last observation OWID data. source_name  character name OWID source data collection. source_website  character web location OWID source. can standard URL numbers consistently reported given page; otherwise source last data point.","code":""},{"path":"/reference/income_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetics for World Bank Country income group — income_aes","title":"Aesthetics for World Bank Country income group — income_aes","text":"Used internally plotting functions style plots World Bank income group.","code":""},{"path":"/reference/income_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetics for World Bank Country income group — income_aes","text":"","code":"income_aes"},{"path":"/reference/income_aes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aesthetics for World Bank Country income group — income_aes","text":"object class data.frame 5 rows 4 columns.","code":""},{"path":"/reference/income_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aesthetics for World Bank Country income group — income_aes","text":"cat_values character plot legend values (match directly World Bank income levels) cat_names character plot legend names (displayed plot legend) cat_colors character Color mappings income group level cat_lines character Line-styles income group level","code":""},{"path":"/reference/manual_iso3_lk.html","id":null,"dir":"Reference","previous_headings":"","what":"Manual ISO 3166-1 alpha-3 country code entries that don't get parsed in get_onetable() — manual_iso3_lk","title":"Manual ISO 3166-1 alpha-3 country code entries that don't get parsed in get_onetable() — manual_iso3_lk","text":"Manual ISO 3166-1 alpha-3 country code entries get parsed get_onetable()","code":""},{"path":"/reference/manual_iso3_lk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manual ISO 3166-1 alpha-3 country code entries that don't get parsed in get_onetable() — manual_iso3_lk","text":"","code":"manual_iso3_lk"},{"path":"/reference/manual_iso3_lk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Manual ISO 3166-1 alpha-3 country code entries that don't get parsed in get_onetable() — manual_iso3_lk","text":"object class list length 3.","code":""},{"path":"/reference/map_burden.html","id":null,"dir":"Reference","previous_headings":"","what":"map_burden — map_burden","title":"map_burden — map_burden","text":"Cross-sectional map: Average daily incidence past 7 days country.","code":""},{"path":"/reference/map_burden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_burden — map_burden","text":"","code":"map_burden(df, region = \"WHO Region\")"},{"path":"/reference/map_burden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_burden — map_burden","text":"df dataframe following: region, country, date, incidence 4-level factors (0- <1, 1- <10, 10- <25, 25+) Produces epi curve, region stacked bar plot epi-week (Monday-Sunday). Input df ONE DATE!","code":""},{"path":"/reference/map_template.html","id":null,"dir":"Reference","previous_headings":"","what":"map_template — map_template","title":"map_template — map_template","text":"Cross-sectional map. Uses stored country_coords data base map.","code":""},{"path":"/reference/map_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_template — map_template","text":"","code":"map_template(df, category_color_labels = \"None\", category_color_values)"},{"path":"/reference/map_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_template — map_template","text":"df dataframe following: country, geometry, date, result = factor value category_color_labels List labels map factor values df. Use \"None\" categories. category_color_values List color values mapping labels. Needs length category_color_labels!","code":""},{"path":"/reference/map_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"map_trend — map_trend","title":"map_trend — map_trend","text":"Cross-sectional map: Average daily incidence past 7 days country.","code":""},{"path":"/reference/map_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_trend — map_trend","text":"","code":"map_trend(df, region = \"WHO Region\")"},{"path":"/reference/map_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_trend — map_trend","text":"df dataframe following: region, country, date, percent_change 6-level factors (0- <1, 1- <10, 10- <25, 25+). Input df ONE DATE!","code":""},{"path":"/reference/map_vaccinations.html","id":null,"dir":"Reference","previous_headings":"","what":"map_vaccinations — map_vaccinations","title":"map_vaccinations — map_vaccinations","text":"Cross-sectional map: People vaccinated per 100 country Fully vaccinated.","code":""},{"path":"/reference/map_vaccinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_vaccinations — map_vaccinations","text":"","code":"map_vaccinations(df, region = \"WHO Region\", vac_type = c(\"People\", \"Fully\"))"},{"path":"/reference/map_vaccinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_vaccinations — map_vaccinations","text":"df dataframe following: region, country, date, people vaccinated per 100 8-level factors (<3, 3-<10, 10-<20, 20-<30, 30-<40, 40-<60, 60-<70, 70+).","code":""},{"path":"/reference/onetable.html","id":null,"dir":"Reference","previous_headings":"","what":"Onetable — onetable","title":"Onetable — onetable","text":"centralized metadata table containing country ids, categories, population counts","code":""},{"path":"/reference/onetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Onetable — onetable","text":"","code":"onetable"},{"path":"/reference/onetable.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Onetable — onetable","text":"data frame 237 rows 10 variables: idcharacter ISO 3166-1 alpha-3 country code iso2codecharacter ISO 3166-1 alpha-2 country code state_regioncharacter US Department State Region who_regioncharacter Region acronym who_region_desccharacter Region english name who_countrycharacter English country text name incomelevel_valuecharacter World Bank Income level populationdouble UN Total population estimates 2020 eighteenplusdouble UN 18+ population estimates 2020 geometrylist List simple features mapping","code":""},{"path":"/reference/onetable.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Onetable — onetable","text":"Population figures Guernsey, Jersey, Pitcairn Islands, Kosovo augmented CIA World Factbook.","code":""},{"path":"/reference/onetable.html","id":"sources","dir":"Reference","previous_headings":"","what":"Sources","title":"Onetable — onetable","text":"https://population.un.org/wpp/Download/Files/4_Metadata/WPP2019_F01_LOCATIONS.XLSX https://population.un.org/wpp/Download/Files/1_Indicators\\ https://population.un.org/wpp/Download/Files/1_Indicators\\ https://worldbank.org datasets","code":""},{"path":"/reference/onetable_addn_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional entries not acknowledged by WHO\nbut required to create onetable — onetable_addn_countries","title":"Additional entries not acknowledged by WHO\nbut required to create onetable — onetable_addn_countries","text":"Additional entries acknowledged required create onetable","code":""},{"path":"/reference/onetable_addn_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional entries not acknowledged by WHO\nbut required to create onetable — onetable_addn_countries","text":"","code":"onetable_addn_countries"},{"path":"/reference/onetable_addn_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Additional entries not acknowledged by WHO\nbut required to create onetable — onetable_addn_countries","text":"object class data.frame 3 rows 3 columns.","code":""},{"path":"/reference/owid_lk.html","id":null,"dir":"Reference","previous_headings":"","what":"OWID location renamings — owid_lk","title":"OWID location renamings — owid_lk","text":"OWID location renamings","code":""},{"path":"/reference/owid_lk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OWID location renamings — owid_lk","text":"","code":"owid_lk"},{"path":"/reference/owid_lk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OWID location renamings — owid_lk","text":"object class character length 12.","code":""},{"path":"/reference/plot_epicurve.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_epicurve — plot_epicurve","title":"plot_epicurve — plot_epicurve","text":"(EPI WEEK) Visualize epi curve epi-weeks (Monday-Sunday) region(s), State region(s), Income levels.","code":""},{"path":"/reference/plot_epicurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_epicurve — plot_epicurve","text":"","code":"plot_epicurve(   df,   type = \"cases\",   by_cat = \"WHO Region\",   legend = \"in\",   transparent = T )"},{"path":"/reference/plot_epicurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_epicurve — plot_epicurve","text":"df dataframe following: date, new_cases one columns by_cat: who_region, state_region, incomelevel_value. Produces epi curve, stacked bar plot epi-week (Monday-Sunday). by_cat = \"Region\" (default), \"State Region\" \"Income Level\" legend Default \"\" - position legend inside plot area. transparent Default TRUE - returns transparent plot.","code":""},{"path":"/reference/plot_epicurve_dailydouble.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_epicurve_dailydouble — plot_epicurve_dailydouble","title":"plot_epicurve_dailydouble — plot_epicurve_dailydouble","text":"(DAILY) Visualize epi curve cases deaths. Default viz individual countries.","code":""},{"path":"/reference/plot_epicurve_dailydouble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_epicurve_dailydouble — plot_epicurve_dailydouble","text":"","code":"plot_epicurve_dailydouble(df)"},{"path":"/reference/plot_epicurve_dailydouble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_epicurve_dailydouble — plot_epicurve_dailydouble","text":"df dataframe following: country, date, cases deaths","code":""},{"path":"/reference/plot_epicurve_epidouble.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_epicurve_epidouble — plot_epicurve_epidouble","title":"plot_epicurve_epidouble — plot_epicurve_epidouble","text":"(EPI WEEK) Visualize epi curve cases deaths. Default viz individual countries.","code":""},{"path":"/reference/plot_epicurve_epidouble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_epicurve_epidouble — plot_epicurve_epidouble","text":"","code":"plot_epicurve_epidouble(df)"},{"path":"/reference/plot_epicurve_epidouble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_epicurve_epidouble — plot_epicurve_epidouble","text":"df dataframe following: country, weekdate, cases deaths","code":""},{"path":"/reference/plot_epicurve_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_epicurve_ind — plot_epicurve_ind","title":"plot_epicurve_ind — plot_epicurve_ind","text":"(DAILY) Visualize epi curve cases deaths. Default viz individual countries.","code":""},{"path":"/reference/plot_epicurve_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_epicurve_ind — plot_epicurve_ind","text":"","code":"plot_epicurve_ind(df, type = \"cases\", incidence = T)"},{"path":"/reference/plot_epicurve_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_epicurve_ind — plot_epicurve_ind","text":"df dataframe following: country, date, cases /deaths type Default cases. incidence Default TRUE. Specify inputs incidence values .","code":""},{"path":"/reference/plot_riskmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_riskmatrix — plot_riskmatrix","title":"plot_riskmatrix — plot_riskmatrix","text":"Plot risk matrix.","code":""},{"path":"/reference/plot_riskmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_riskmatrix — plot_riskmatrix","text":"","code":"plot_riskmatrix(df, region = \"WHO Region\", v = T, h = T)"},{"path":"/reference/plot_riskmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_riskmatrix — plot_riskmatrix","text":"df dataframe riskmatrix stats.","code":""},{"path":"/reference/plot_vaxcoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_vaxcoverage — plot_vaxcoverage","title":"plot_vaxcoverage — plot_vaxcoverage","text":"Plot vaccination coverage (partial fully) region(s), State region(s), Income levels.","code":""},{"path":"/reference/plot_vaxcoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_vaxcoverage — plot_vaxcoverage","text":"","code":"plot_vaxcoverage(df, type = \"partial\", by_cat = \"State Region\")"},{"path":"/reference/plot_vaxcoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_vaxcoverage — plot_vaxcoverage","text":"df dataframe vaccination stats.","code":""},{"path":"/reference/plot_vaxcurve.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_vaxcurve — plot_vaxcurve","title":"plot_vaxcurve — plot_vaxcurve","text":"Visualize vaccine coverage date reporting region(s), State region(s), Income levels.","code":""},{"path":"/reference/plot_vaxcurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_vaxcurve — plot_vaxcurve","text":"","code":"plot_vaxcurve(   df,   type = \"partial\",   by_cat = \"Dept. of State Region\",   countries = \"All\" )"},{"path":"/reference/plot_vaxcurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_vaxcurve — plot_vaxcurve","text":"df dataframe following: date, people_vaccinated_per_hundred people_fully_vaccinated_per_hundred, one columns by_cat: who_region, state_region, incomelevel_value. type = \"partial\" (default) partial vaccinated \"full\" fully vaccinated by_cat = \"State Region\" (default), \"Region\" \"Income Level\" countries = \"\" (default) countries \"AMC/AU\" AMC/AU countries (n=100)","code":""},{"path":"/reference/state_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetics for US Department of State regions — state_aes","title":"Aesthetics for US Department of State regions — state_aes","text":"Used internally plotting functions style plots DoS-regions.","code":""},{"path":"/reference/state_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetics for US Department of State regions — state_aes","text":"","code":"state_aes"},{"path":"/reference/state_aes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aesthetics for US Department of State regions — state_aes","text":"object class data.frame 8 rows 4 columns.","code":""},{"path":"/reference/state_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aesthetics for US Department of State regions — state_aes","text":"cat_values character plot legend values (match directly DoS region names) cat_names character plot legend names (displayed plot legend) cat_colors character Color mappings state region cat_lines character Line-styles state region","code":""},{"path":"/reference/table_10incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"table_10incidence — table_10incidence","title":"table_10incidence — table_10incidence","text":"Table displaying top 10's.","code":""},{"path":"/reference/table_10incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_10incidence — table_10incidence","text":"","code":"table_10incidence(df, type = \"Global\", run_date = \"Enter a date\")"},{"path":"/reference/table_10incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_10incidence — table_10incidence","text":"df dataframe following order: country, value1 - incidence, value2 - percent change, date","code":""},{"path":"/reference/table_10mostcases.html","id":null,"dir":"Reference","previous_headings":"","what":"table_10mostcases — table_10mostcases","title":"table_10mostcases — table_10mostcases","text":"Table displaying top 10's.","code":""},{"path":"/reference/table_10mostcases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_10mostcases — table_10mostcases","text":"","code":"table_10mostcases(df, type = \"Global\", run_date = \"Enter a date\")"},{"path":"/reference/table_10mostcases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_10mostcases — table_10mostcases","text":"df dataframe following order: country, value1 - cases, value2 - percent change","code":""},{"path":"/reference/table_10percentchange.html","id":null,"dir":"Reference","previous_headings":"","what":"table_10percentchange — table_10percentchange","title":"table_10percentchange — table_10percentchange","text":"Table displaying top 10's.","code":""},{"path":"/reference/table_10percentchange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_10percentchange — table_10percentchange","text":"","code":"table_10percentchange(df, type = \"Global\", run_date = \"Enter a date\")"},{"path":"/reference/table_10percentchange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_10percentchange — table_10percentchange","text":"df dataframe following order: country, value1 - last week percent change, value2 - 4 week percent change, date","code":""},{"path":"/reference/table_10vaccinations.html","id":null,"dir":"Reference","previous_headings":"","what":"table_10vaccinations — table_10vaccinations","title":"table_10vaccinations — table_10vaccinations","text":"Table displaying top 10's.","code":""},{"path":"/reference/table_10vaccinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_10vaccinations — table_10vaccinations","text":"","code":"table_10vaccinations(   df,   vac_type = \"Partial\",   type = \"Global\",   run_date = \"Enter a date\" )"},{"path":"/reference/table_10vaccinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_10vaccinations — table_10vaccinations","text":"df dataframe following order: country, value1 - people vaccinated per 100, value2 - daily vaccines administered per 100 people, date vac_type (character, default: \"Partial\") one \"Partial\", \"Fully\" depending vaccination status tabulated type (character, default: \"Global\") Text name subset data df , included title run_date (character, default: \"Enter date\") Run date include table source","code":""},{"path":"/reference/table_10vaccinations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"table_10vaccinations — table_10vaccinations","text":"","code":"if (FALSE) { sunday_date <- lubridate::floor_date(Sys.Date(), \"week\", week_start = 7) df_who <- get_combined_table(\"WHO\")  # Take global data for countries with population > 1,000,000 df_who %>%   filter(date <= sunday_date, population > 1000000) %>%   group_by(country) %>%   filter(!is.na(people_fully_vaccinated_per_hundred)) %>%   filter(date == max(date)) %>%   ungroup() %>%   select(country = who_country, value1 = people_fully_vaccinated_per_hundred, value2 = daily_vaccinations_per_hundred) %>%   arrange(desc(value1)) %>%   head(10) %>%   table_10vaccinations(., run_date = format(sunday_date, \"%B %d, %Y\")) }"},{"path":"/reference/table_countriesofconcern.html","id":null,"dir":"Reference","previous_headings":"","what":"table_countriesofconcern — table_countriesofconcern","title":"table_countriesofconcern — table_countriesofconcern","text":"Table displaying stats list countries concern.","code":""},{"path":"/reference/table_countriesofconcern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_countriesofconcern — table_countriesofconcern","text":"","code":"table_countriesofconcern(df, df_vax_man, country_list)"},{"path":"/reference/table_countriesofconcern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_countriesofconcern — table_countriesofconcern","text":"df dataframe following: id, who_country, date, new_cases, week_case_incidence, week_case, prev_week_case, percent_change_case, new_deaths, week_death_incidence, week_death, prev_week_death, percent_change_death, people_vaccinated_per_hundred, total_vaccinations_per_hundred df_vax_man dataframe following: id, date, vaccines country_list (character) vector ISO 3166-1 alpha-3 country codes countries highlight","code":""},{"path":"/reference/table_countriesofconcern.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"table_countriesofconcern — table_countriesofconcern","text":"Recent Date Vaccinations column computed internally via call get_vax()","code":""},{"path":"/reference/table_countriesofconcern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"table_countriesofconcern — table_countriesofconcern","text":"","code":"if (FALSE) { # Get case/death/vax data df_both <- get_combined_table(\"Both\")  # Select some countries c_list <- c(\"United Kingdom\", \"Denmark\", \"United States of America\") # The function expects ISO3 codes, so parse if input is raw c_list_iso <- parse_country(c_list, to = \"iso3c\")  # Take the latest observation for each country (vax + case + deaths) df_both_latest <- df_both %>%   group_by(id) %>%   filter(date == max(date)) %>%   ungroup()  # Pull metadata on vax manufacturers vax_man <- get_vax_manufacturers()  # Produce table table_countriesofconcern(df_both_latest, vax_man, c_list_iso) }"},{"path":"/reference/who_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetics for WHO regions — who_aes","title":"Aesthetics for WHO regions — who_aes","text":"Used internally plotting functions style plots -regions.","code":""},{"path":"/reference/who_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetics for WHO regions — who_aes","text":"","code":"who_aes"},{"path":"/reference/who_aes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aesthetics for WHO regions — who_aes","text":"object class data.frame 6 rows 4 columns.","code":""},{"path":"/reference/who_aes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aesthetics for WHO regions — who_aes","text":"cat_values character plot legend values (match directly region names) cat_names character plot legend names (displayed plot legend) cat_colors character Color mappings region cat_lines character Line-styles region","code":""},{"path":"/reference/who_lk.html","id":null,"dir":"Reference","previous_headings":"","what":"WHO Country renamings / rebinnings — who_lk","title":"WHO Country renamings / rebinnings — who_lk","text":"Country renamings / rebinnings","code":""},{"path":"/reference/who_lk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WHO Country renamings / rebinnings — who_lk","text":"","code":"who_lk"},{"path":"/reference/who_lk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WHO Country renamings / rebinnings — who_lk","text":"object class character length 23.","code":""},{"path":"/reference/who_region_lk.html","id":null,"dir":"Reference","previous_headings":"","what":"WHO ","title":"WHO ","text":"helper lookup table map region acronyms \"pretty\" english name.","code":""},{"path":"/reference/who_region_lk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WHO ","text":"","code":"who_region_lk"},{"path":"/reference/who_region_lk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WHO ","text":"character vector length 6: AMRO character Americas EURO character Europe SEARO character Southeast Asia EMRO character Eastern Mediterranean AFRO character Africa WPRO character Western Pacific","code":""},{"path":"/reference/who_region_lk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WHO ","text":"internal use generating onetable via get_onetable()","code":""}]
