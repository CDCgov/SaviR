# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck
          cache-version: 2
      - uses: r-lib/actions/check-r-package@v2
        with:
          args: '--no-manual'
          error-on: '"error"'
      # - name: Upload check results
      #   if: failure()
      #   uses: actions/upload-artifact@main
      #   with:
      #     name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #     path: check
  write_shapefile:
    # needs: R-CMD-check
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Mapshaper
        run: |
          npm install -g mapshaper topojson-server

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: 'release'
      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          cache-version: 2
          extra-packages: devtools

      - name: Write out onetable
        run: |
          source("inst/write_shapefile.R")
        shell: Rscript {0}

      - name: geoJSON to TopoJSON
        run: |
          geo2topo inst/extdata/onetable.geojson > inst/extdata/onetable.json
          rm inst/extdata/onetable.geojson
        shell: bash

      - name: Archive JSON
        uses: actions/upload-artifact@v2
        with:
          name: Shapefile
          path: inst/extdata/onetable.json

